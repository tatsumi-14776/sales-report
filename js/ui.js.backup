/**
 * UI謫堺ｽ懷・逅・ * 蜍慕噪隕∫ｴ逕滓・縲．OM謫堺ｽ懊√う繝吶Φ繝医ワ繝ｳ繝峨Μ繝ｳ繧ｰ
 */

/**
 * 謾ｯ謇輔＞譁ｹ豕輔そ繧ｯ繧ｷ繝ｧ繝ｳ繧貞虚逧・函謌・ */
function generatePaymentMethods() {
    const salesSection = document.querySelector('.section-green');
    if (!salesSection) {
        console.error('.section-green隕∫ｴ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ');
        throw new Error('螢ｲ荳翫そ繧ｯ繧ｷ繝ｧ繝ｳ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ');
    }
    
    const sectionTitle = salesSection.querySelector('.section-title');
    const salesTotalSection = salesSection.querySelector('.section-total');
    
    if (!sectionTitle) {
        console.error('螢ｲ荳翫そ繧ｯ繧ｷ繝ｧ繝ｳ縺ｮ繧ｿ繧､繝医Ν縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ');
        throw new Error('螢ｲ荳翫そ繧ｯ繧ｷ繝ｧ繝ｳ縺ｮ繧ｿ繧､繝医Ν縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ');
    }
    
    if (!salesTotalSection) {
        console.error('螢ｲ荳雁粋險医そ繧ｯ繧ｷ繝ｧ繝ｳ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ');
        throw new Error('螢ｲ荳雁粋險医そ繧ｯ繧ｷ繝ｧ繝ｳ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ');
    }
    
    // 譌｢蟄倥・謾ｯ謇輔＞譁ｹ豕輔ｒ繧ｯ繝ｪ繧｢
    const existingMethods = salesSection.querySelectorAll('.payment-method');
    existingMethods.forEach(method => method.remove());
    
    if (!paymentMethodConfig || !Array.isArray(paymentMethodConfig)) {
        throw new Error('paymentMethodConfig 縺梧ｭ｣縺励￥螳夂ｾｩ縺輔ｌ縺ｦ縺・∪縺帙ｓ');
    }
    
    paymentMethodConfig.forEach((method, index) => {
        try {
            const methodDiv = document.createElement('div');
            methodDiv.className = 'payment-method';
            methodDiv.innerHTML = `
                <div class="tax-grid">
                    <div class="method-title">${method.label}</div>
                    <div class="tax-header">遞守紫10%</div>
                    <div class="tax-header">遞守紫8%</div>
                    <div class="tax-header">蜷郁ｨ・/div>
                    <div></div>
                    <div><input type="number" id="${method.id}10" class="tax-input" placeholder="0"></div>
                    <div><input type="number" id="${method.id}8" class="tax-input" placeholder="0"></div>
                    <div class="tax-total" id="${method.id}Total">ﾂ･0</div>
                </div>
            `;
            
            // 繧ｻ繧ｯ繧ｷ繝ｧ繝ｳ繧ｿ繧､繝医Ν縺ｮ蠕後∝｣ｲ荳雁粋險医・蜑阪↓謖ｿ蜈･
            salesSection.insertBefore(methodDiv, salesTotalSection);
            console.log(`謾ｯ謇輔＞譁ｹ豕輔・{method.label}縲阪ｒ逕滓・縺励∪縺励◆`);
            
        } catch (error) {
            console.error(`謾ｯ謇輔＞譁ｹ豕輔・{method.label}縲阪・逕滓・縺ｧ繧ｨ繝ｩ繝ｼ:`, error);
            throw new Error(`謾ｯ謇輔＞譁ｹ豕輔・{method.label}縲阪・逕滓・縺ｫ螟ｱ謨励＠縺ｾ縺励◆`);
        }
    });
    
    console.log(`謾ｯ謇輔＞譁ｹ豕輔そ繧ｯ繧ｷ繝ｧ繝ｳ縺ｮ逕滓・螳御ｺ・ｼ・{paymentMethodConfig.length}莉ｶ・荏);
}

/**
 * 繝昴う繝ｳ繝医・繧ｯ繝ｼ繝昴Φ謾ｯ謇輔そ繧ｯ繧ｷ繝ｧ繝ｳ繧貞虚逧・函謌撰ｼ育ｨ守紫蟇ｾ蠢懃沿・・ */
function generateDiscountSection() {
    
    
    const container = document.querySelector('.section-orange');
    if (!container) {
        console.error('.section-orange隕∫ｴ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ');
        throw new Error('繝昴う繝ｳ繝医・繧ｯ繝ｼ繝昴Φ謾ｯ謇輔そ繧ｯ繧ｷ繝ｧ繝ｳ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ');
    }
    
    const sectionTitle = container.querySelector('.section-title');
    const totalSection = container.querySelector('.section-total');
    
    if (!sectionTitle) {
        console.error('繝昴う繝ｳ繝医・繧ｯ繝ｼ繝昴Φ謾ｯ謇輔そ繧ｯ繧ｷ繝ｧ繝ｳ縺ｮ繧ｿ繧､繝医Ν縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ');
        throw new Error('繝昴う繝ｳ繝医・繧ｯ繝ｼ繝昴Φ謾ｯ謇輔そ繧ｯ繧ｷ繝ｧ繝ｳ縺ｮ繧ｿ繧､繝医Ν縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ');
    }
    
    if (!totalSection) {
        console.error('繝昴う繝ｳ繝医・繧ｯ繝ｼ繝昴Φ謾ｯ謇募粋險医そ繧ｯ繧ｷ繝ｧ繝ｳ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ');
        throw new Error('繝昴う繝ｳ繝医・繧ｯ繝ｼ繝昴Φ謾ｯ謇募粋險医そ繧ｯ繧ｷ繝ｧ繝ｳ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ');
    }
    
    // 譌｢蟄倥・鬆・岼繧偵け繝ｪ繧｢
    const existingMethods = container.querySelectorAll('.payment-method');
    existingMethods.forEach(method => method.remove());
    console.log(`譌｢蟄倥・繝昴う繝ｳ繝医・繧ｯ繝ｼ繝昴Φ謾ｯ謇・${existingMethods.length} 莉ｶ繧偵け繝ｪ繧｢縺励∪縺励◆`);
    
    if (!pointPaymentConfig || !Array.isArray(pointPaymentConfig)) {
        throw new Error('pointPaymentConfig 縺梧ｭ｣縺励￥螳夂ｾｩ縺輔ｌ縺ｦ縺・∪縺帙ｓ');
    }
    
    pointPaymentConfig.forEach((payment, index) => {
        try {
            const paymentDiv = document.createElement('div');
            paymentDiv.className = 'payment-method';
            paymentDiv.innerHTML = `
                <div class="tax-grid">
                    <div class="method-title">${payment.label}</div>
                    <div class="tax-header">遞守紫10%</div>
                    <div class="tax-header">遞守紫8%</div>
                    <div class="tax-header">蜷郁ｨ・/div>
                    <div></div>
                    <div><input type="number" id="${payment.id}10" class="tax-input" placeholder="0"></div>
                    <div><input type="number" id="${payment.id}8" class="tax-input" placeholder="0"></div>
                    <div class="tax-total" id="${payment.id}Total">ﾂ･0</div>
                </div>
            `;
            
            // 繧ｻ繧ｯ繧ｷ繝ｧ繝ｳ繧ｿ繧､繝医Ν縺ｮ蠕後∝粋險医・蜑阪↓謖ｿ蜈･
            container.insertBefore(paymentDiv, totalSection);
            console.log(`繝昴う繝ｳ繝医・繧ｯ繝ｼ繝昴Φ謾ｯ謇輔・{payment.label}縲阪ｒ逕滓・縺励∪縺励◆`);
            
        } catch (error) {
            console.error(`繝昴う繝ｳ繝医・繧ｯ繝ｼ繝昴Φ謾ｯ謇輔・{payment.label}縲阪・逕滓・縺ｧ繧ｨ繝ｩ繝ｼ:`, error);
            throw new Error(`繝昴う繝ｳ繝医・繧ｯ繝ｼ繝昴Φ謾ｯ謇輔・{payment.label}縲阪・逕滓・縺ｫ螟ｱ謨励＠縺ｾ縺励◆`);
        }
    });
    
    console.log(`繝昴う繝ｳ繝医・繧ｯ繝ｼ繝昴Φ謾ｯ謇輔そ繧ｯ繧ｷ繝ｧ繝ｳ縺ｮ逕滓・螳御ｺ・ｼ・{pointPaymentConfig.length}莉ｶ・荏);
}

/**
 * 驥醍ｨｮ陦檎函謌・ */
function generateDenominationRows() {
    
    
    const container = document.getElementById('denominationRows');
    if (!container) {
        console.error('denominationRows隕∫ｴ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ');
        throw new Error('驥醍ｨｮ陦後・繧ｳ繝ｳ繝・リ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ');
    }
    
    container.innerHTML = '';
    
    if (!denominations || !Array.isArray(denominations)) {
        throw new Error('denominations 縺梧ｭ｣縺励￥螳夂ｾｩ縺輔ｌ縺ｦ縺・∪縺帙ｓ');
    }

    denominations.forEach((denom, index) => {
        try {
            const row = document.createElement('div');
            row.className = 'cash-row';
            row.innerHTML = `
                <div class="denomination-label">${denom.label}</div>
                <div>
                    <input type="number" class="count-input" placeholder="0" 
                           data-type="register" data-denom="${denom.key}" onchange="updateCashCalculation()">
                </div>
                <div>
                    <input type="number" class="count-input" placeholder="0" 
                           data-type="safe" data-denom="${denom.key}" onchange="updateCashCalculation()">
                </div>
                <div class="count-display" id="count_${denom.key}">0譫・/div>
                <div class="amount-display" id="amount_${denom.key}">ﾂ･0</div>
            `;
            container.appendChild(row);
            console.log(`驥醍ｨｮ縲・{denom.label}縲阪・陦後ｒ逕滓・縺励∪縺励◆`);
            
        } catch (error) {
            console.error(`驥醍ｨｮ縲・{denom.label}縲阪・陦檎函謌舌〒繧ｨ繝ｩ繝ｼ:`, error);
            throw new Error(`驥醍ｨｮ縲・{denom.label}縲阪・陦檎函謌舌↓螟ｱ謨励＠縺ｾ縺励◆`);
        }
    });
    
    console.log(`驥醍ｨｮ陦後・逕滓・螳御ｺ・ｼ・{denominations.length}莉ｶ・荏);
}

/**
 * 邨瑚ｲｻ繝ｬ繧ｳ繝ｼ繝芽ｿｽ蜉
 */
function addExpenseRecord() {
    
    
    const container = document.getElementById('expenseRecords');
    if (!container) {
        console.error('expenseRecords隕∫ｴ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ');
        showError('邨瑚ｲｻ繝ｬ繧ｳ繝ｼ繝峨・繧ｳ繝ｳ繝・リ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ');
        return;
    }
    
    if (!accountCategories || !Array.isArray(accountCategories)) {
        console.error('accountCategories 縺梧ｭ｣縺励￥螳夂ｾｩ縺輔ｌ縺ｦ縺・∪縺帙ｓ');
        showError('蜍伜ｮ夂ｧ醍岼縺ｮ險ｭ螳壹′豁｣縺励￥縺ゅｊ縺ｾ縺帙ｓ');
        return;
    }
    
    try {
        const newRecord = document.createElement('div');
        newRecord.className = 'expense-record';
        
        // 蜍伜ｮ夂ｧ醍岼縺ｮ繧ｪ繝励す繝ｧ繝ｳ繧堤函謌・        const accountOptions = accountCategories.map(category => 
            `<option value="${category.value}">${category.label}</option>`
        ).join('');
        
        newRecord.innerHTML = `
            <input type="text" class="expense-input" placeholder="雉ｼ蜈･蜈・ data-field="vendor" data-id="${nextExpenseId}">
            <select class="expense-select" data-field="account" data-id="${nextExpenseId}">
                ${accountOptions}
            </select>
            <input type="text" class="expense-input" placeholder="蜩∫黄繝ｻ蜀・ｮｹ" data-field="item" data-id="${nextExpenseId}">
            <div class="expense-amount-wrapper">
                <span class="expense-amount-symbol">ﾂ･</span>
                <input type="number" class="expense-amount-input" placeholder="0" data-field="amount" data-id="${nextExpenseId}">
            </div>
            <button class="delete-button" onclick="removeExpenseRecord(${nextExpenseId})">
                <svg width="12" height="12" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                </svg>
            </button>
        `;
        container.appendChild(newRecord);
        
        expenseRecords.push({id: nextExpenseId, vendor: '', account: '', item: '', amount: ''});
        console.log(`邨瑚ｲｻ繝ｬ繧ｳ繝ｼ繝・ID:${nextExpenseId} 繧定ｿｽ蜉縺励∪縺励◆`);
        nextExpenseId++;
        
        updateDeleteButtonStates();
        
    } catch (error) {
        console.error('邨瑚ｲｻ繝ｬ繧ｳ繝ｼ繝芽ｿｽ蜉縺ｧ繧ｨ繝ｩ繝ｼ:', error);
        showError('邨瑚ｲｻ繝ｬ繧ｳ繝ｼ繝峨・霑ｽ蜉縺ｫ螟ｱ謨励＠縺ｾ縺励◆');
    }
}

/**
 * 邨瑚ｲｻ繝ｬ繧ｳ繝ｼ繝牙炎髯､
 * @param {number} id 蜑企勁縺吶ｋ繝ｬ繧ｳ繝ｼ繝峨・ID
 */
function removeExpenseRecord(id) {
    console.log(`邨瑚ｲｻ繝ｬ繧ｳ繝ｼ繝・ID:${id} 縺ｮ蜑企勁繧定ｩｦ陦御ｸｭ`);
    
    if (expenseRecords.length <= 1) {
        console.warn('譛蠕後・邨瑚ｲｻ繝ｬ繧ｳ繝ｼ繝峨・蜑企勁縺ｧ縺阪∪縺帙ｓ');
        showError('譛菴・縺､縺ｮ邨瑚ｲｻ繝ｬ繧ｳ繝ｼ繝峨・蠢・ｦ√〒縺・);
        return;
    }
    
    try {
        const recordElement = document.querySelector(`[data-id="${id}"]`)?.closest('.expense-record');
        if (recordElement) {
            recordElement.remove();
            console.log(`邨瑚ｲｻ繝ｬ繧ｳ繝ｼ繝・ID:${id} 縺ｮDOM隕∫ｴ繧貞炎髯､縺励∪縺励◆`);
        } else {
            console.warn(`邨瑚ｲｻ繝ｬ繧ｳ繝ｼ繝・ID:${id} 縺ｮDOM隕∫ｴ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ`);
        }
        
        expenseRecords = expenseRecords.filter(record => record.id !== id);
        console.log(`邨瑚ｲｻ繝ｬ繧ｳ繝ｼ繝・ID:${id} 繧偵ョ繝ｼ繧ｿ縺九ｉ蜑企勁縺励∪縺励◆`);
        
        updateDeleteButtonStates();
        updateAllCalculations();
        
    } catch (error) {
        console.error(`邨瑚ｲｻ繝ｬ繧ｳ繝ｼ繝・ID:${id} 縺ｮ蜑企勁縺ｧ繧ｨ繝ｩ繝ｼ:`, error);
        showError('邨瑚ｲｻ繝ｬ繧ｳ繝ｼ繝峨・蜑企勁縺ｫ螟ｱ謨励＠縺ｾ縺励◆');
    }
}

/**
 * 蜑企勁繝懊ち繝ｳ縺ｮ迥ｶ諷区峩譁ｰ
 */
function updateDeleteButtonStates() {
    try {
        const deleteButtons = document.querySelectorAll('.delete-button');
        deleteButtons.forEach(button => {
            button.disabled = expenseRecords.length <= 1;
        });
        console.log(`蜑企勁繝懊ち繝ｳ縺ｮ迥ｶ諷九ｒ譖ｴ譁ｰ縺励∪縺励◆・・{deleteButtons.length}蛟具ｼ荏);
    } catch (error) {
        console.error('蜑企勁繝懊ち繝ｳ迥ｶ諷区峩譁ｰ縺ｧ繧ｨ繝ｩ繝ｼ:', error);
    }
}

/**
 * 繧､繝吶Φ繝医Μ繧ｹ繝翫・險ｭ螳・ */
function setupEventListeners() {
    
    
    try {
        // 螢ｲ荳企・岼縺ｮ險育ｮ暦ｼ亥虚逧・↓逕滓・縺輔ｌ縺櫑D縺ｫ蟇ｾ蠢懶ｼ・        if (paymentMethodConfig && Array.isArray(paymentMethodConfig)) {
            paymentMethodConfig.forEach(method => {
                const element10 = document.getElementById(`${method.id}10`);
                const element8 = document.getElementById(`${method.id}8`);
                
                if (element10) {
                    element10.addEventListener('input', updateAllCalculations);
                    console.log(`螢ｲ荳企・岼 ${method.id}10 縺ｫ繝ｪ繧ｹ繝翫・繧定ｨｭ螳啻);
                } else {
                    console.warn(`螢ｲ荳企・岼 ${method.id}10 縺ｮ隕∫ｴ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ`);
                }
                
                if (element8) {
                    element8.addEventListener('input', updateAllCalculations);
                    console.log(`螢ｲ荳企・岼 ${method.id}8 縺ｫ繝ｪ繧ｹ繝翫・繧定ｨｭ螳啻);
                } else {
                    console.warn(`螢ｲ荳企・岼 ${method.id}8 縺ｮ隕∫ｴ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ`);
                }
            });
        }

        // 繝昴う繝ｳ繝医・繧ｯ繝ｼ繝昴Φ謾ｯ謇輔・險育ｮ暦ｼ育ｨ守紫蟇ｾ蠢懃沿・・        if (pointPaymentConfig && Array.isArray(pointPaymentConfig)) {
            pointPaymentConfig.forEach(payment => {
                const element10 = document.getElementById(`${payment.id}10`);
                const element8 = document.getElementById(`${payment.id}8`);
                
                if (element10) {
                    element10.addEventListener('input', updateAllCalculations);
                    console.log(`繝昴う繝ｳ繝医・繧ｯ繝ｼ繝昴Φ謾ｯ謇・${payment.id}10 縺ｫ繝ｪ繧ｹ繝翫・繧定ｨｭ螳啻);
                } else {
                    console.warn(`繝昴う繝ｳ繝医・繧ｯ繝ｼ繝昴Φ謾ｯ謇・${payment.id}10 縺ｮ隕∫ｴ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ`);
                }
                
                if (element8) {
                    element8.addEventListener('input', updateAllCalculations);
                    console.log(`繝昴う繝ｳ繝医・繧ｯ繝ｼ繝昴Φ謾ｯ謇・${payment.id}8 縺ｫ繝ｪ繧ｹ繝翫・繧定ｨｭ螳啻);
                } else {
                    console.warn(`繝昴う繝ｳ繝医・繧ｯ繝ｼ繝昴Φ謾ｯ謇・${payment.id}8 縺ｮ隕∫ｴ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ`);
                }
            });
        }

        // 蜈･驥代・髮大庶蜈･縺ｮ險育ｮ・        const incomeFields = ['nyukin', 'miscIncome', 'foundMoney'];
        incomeFields.forEach(id => {
            const element = document.getElementById(id);
            if (element) {
                element.addEventListener('input', updateAllCalculations);
                console.log(`蜈･驥代・髮大庶蜈･ ${id} 縺ｫ繝ｪ繧ｹ繝翫・繧定ｨｭ螳啻);
            } else {
                console.warn(`蜈･驥代・髮大庶蜈･ ${id} 縺ｮ隕∫ｴ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ`);
            }
        });

        // 蜑肴律迴ｾ驥第ｮ九・險育ｮ・        const previousCashElement = document.getElementById('previousCashBalance');
        if (previousCashElement) {
            previousCashElement.addEventListener('input', updateAllCalculations);
            
        } else {
            console.warn('蜑肴律迴ｾ驥第ｮ九・隕∫ｴ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ');
        }

        // 邨瑚ｲｻ縺ｮ險育ｮ暦ｼ亥虚逧・ｦ∫ｴ縺ｫ蟇ｾ蠢懶ｼ・        document.addEventListener('input', function(e) {
            if (e.target.dataset.field === 'amount') {
                updateAllCalculations();
            }
        });
        
        
        
        
    } catch (error) {
        console.error('繧､繝吶Φ繝医Μ繧ｹ繝翫・險ｭ螳壹〒繧ｨ繝ｩ繝ｼ:', error);
        throw new Error('繧､繝吶Φ繝医Μ繧ｹ繝翫・縺ｮ險ｭ螳壹↓螟ｱ謨励＠縺ｾ縺励◆');
    }
}

/**
 * 蛯呵・・蝣ｱ蜻贋ｺ矩・・繧､繝吶Φ繝医Μ繧ｹ繝翫・險ｭ螳・ */
function setupRemarksListeners() {
    
    
    try {
        const remarksTextarea = document.getElementById('remarks');
        const charCount = document.getElementById('charCount');
        
        if (!remarksTextarea) {
            console.warn('remarks隕∫ｴ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ');
            return;
        }
        
        if (!charCount) {
            console.warn('charCount隕∫ｴ縺瑚ｦ九▽縺九ｊ縺ｾ縺帙ｓ');
            return;
        }
        
        remarksTextarea.addEventListener('input', function() {
            try {
                const currentLength = remarksTextarea.value.length;
                charCount.textContent = currentLength;
                
                // 譁・ｭ玲焚縺ｫ繧医ｋ濶ｲ蛻・￠
                const charCountElement = charCount.parentElement;
                if (charCountElement) {
                    charCountElement.classList.remove('warning', 'error');
                    
                    if (currentLength > 900) {
                        charCountElement.classList.add('error');
                    } else if (currentLength > 800) {
                        charCountElement.classList.add('warning');
                    }
                }
                
            } catch (error) {
                console.error('蛯呵・枚蟄玲焚繧ｫ繧ｦ繝ｳ繝亥・逅・〒繧ｨ繝ｩ繝ｼ:', error);
            }
        });
        
        
        
    } catch (error) {
        console.error('蛯呵・・蝣ｱ蜻贋ｺ矩・Μ繧ｹ繝翫・險ｭ螳壹〒繧ｨ繝ｩ繝ｼ:', error);
        console.warn('蛯呵・・蝣ｱ蜻贋ｺ矩・・讖溯・縺悟宛髯舌＆繧後ｋ蜿ｯ閭ｽ諤ｧ縺後≠繧翫∪縺・);
    }
}

/**
 * 繝輔か繝ｼ繝縺ｫ繝・・繧ｿ繧定ｪｭ縺ｿ霎ｼ繧・育ｨ守紫蟇ｾ蠢懃沿・・ * @param {Object} data 隱ｭ縺ｿ霎ｼ繧繝・・繧ｿ
 */
function loadDataIntoForm(data) {
    
    
    try {
        // 蝓ｺ譛ｬ諠・ｱ
        const dateElement = document.getElementById('date');
        const storeNameElement = document.getElementById('storeName');
        const inputByElement = document.getElementById('inputBy');
        
        if (dateElement && data.date) {
            dateElement.value = data.date;
            
        }
        if (storeNameElement && data.storeName) {
            storeNameElement.value = data.storeName;
            
        }
        if (inputByElement && data.inputBy) {
            inputByElement.value = data.inputBy;
            
        }
        
        // 螢ｲ荳頑ュ蝣ｱ・亥虚逧・↓蟇ｾ蠢懶ｼ・        if (data.sales && paymentMethodConfig) {
            paymentMethodConfig.forEach(method => {
                const element10 = document.getElementById(`${method.id}10`);
                const element8 = document.getElementById(`${method.id}8`);
                
                if (element10 && data.sales[`${method.id}10`] !== undefined) {
                    element10.value = data.sales[`${method.id}10`] || 0;
                    console.log(`螢ｲ荳・${method.id}10 繧定ｨｭ螳・`, data.sales[`${method.id}10`]);
                }
                if (element8 && data.sales[`${method.id}8`] !== undefined) {
                    element8.value = data.sales[`${method.id}8`] || 0;
                    console.log(`螢ｲ荳・${method.id}8 繧定ｨｭ螳・`, data.sales[`${method.id}8`]);
                }
            });
        }
        
        // 繝昴う繝ｳ繝医・繧ｯ繝ｼ繝昴Φ謾ｯ謇墓ュ蝣ｱ・育ｨ守紫蟇ｾ蠢懃沿・・        if (data.pointPayments && pointPaymentConfig) {
            pointPaymentConfig.forEach(payment => {
                const element10 = document.getElementById(`${payment.id}10`);
                const element8 = document.getElementById(`${payment.id}8`);
                
                if (element10 && data.pointPayments[`${payment.id}10`] !== undefined) {
                    element10.value = data.pointPayments[`${payment.id}10`] || 0;
                    console.log(`繝昴う繝ｳ繝医・繧ｯ繝ｼ繝昴Φ謾ｯ謇・${payment.id}10 繧定ｨｭ螳・`, data.pointPayments[`${payment.id}10`]);
                }
                if (element8 && data.pointPayments[`${payment.id}8`] !== undefined) {
                    element8.value = data.pointPayments[`${payment.id}8`] || 0;
                    console.log(`繝昴う繝ｳ繝医・繧ｯ繝ｼ繝昴Φ謾ｯ謇・${payment.id}8 繧定ｨｭ螳・`, data.pointPayments[`${payment.id}8`]);
                }
            });
        }
        
        // 蜈･驥代・髮大庶蜈･
        if (data.income) {
            const nyukinElement = document.getElementById('nyukin');
            const miscIncomeElement = document.getElementById('miscIncome');
            const foundMoneyElement = document.getElementById('foundMoney');
            
            if (nyukinElement && data.income.nyukin !== undefined) {
                nyukinElement.value = data.income.nyukin || 0;
                
            }
            if (miscIncomeElement && data.income.miscIncome !== undefined) {
                miscIncomeElement.value = data.income.miscIncome || 0;
                
            }
            if (foundMoneyElement && data.income.foundMoney !== undefined) {
                foundMoneyElement.value = data.income.foundMoney || 0;
                
            }
        }
        
        // 蜑肴律迴ｾ驥第ｮ・        if (data.previousCashBalance !== undefined) {
            const previousCashElement = document.getElementById('previousCashBalance');
            if (previousCashElement) {
                previousCashElement.value = data.previousCashBalance || 0;
                
            }
        }
        
        // 迴ｾ驥醍ｮ｡逅・ョ繝ｼ繧ｿ
        if (data.cash && denominations) {
            denominations.forEach(denom => {
                const registerInput = document.querySelector(`[data-type="register"][data-denom="${denom.key}"]`);
                const safeInput = document.querySelector(`[data-type="safe"][data-denom="${denom.key}"]`);
                
                if (registerInput && data.cash[denom.key]?.register !== undefined) {
                    registerInput.value = data.cash[denom.key].register || 0;
                    console.log(`繝ｬ繧ｸ ${denom.key} 繧定ｨｭ螳・`, data.cash[denom.key].register);
                }
                if (safeInput && data.cash[denom.key]?.safe !== undefined) {
                    safeInput.value = data.cash[denom.key].safe || 0;
                    console.log(`驥大ｺｫ ${denom.key} 繧定ｨｭ螳・`, data.cash[denom.key].safe);
                }
            });
        }
        
        // 邨瑚ｲｻ繝・・繧ｿ
        if (data.expenses && Array.isArray(data.expenses) && data.expenses.length > 0) {
            
            
            // 譌｢蟄倥・邨瑚ｲｻ繝ｬ繧ｳ繝ｼ繝峨ｒ繧ｯ繝ｪ繧｢
            expenseRecords = [];
            nextExpenseId = 1;
            const expenseContainer = document.getElementById('expenseRecords');
            if (expenseContainer) {
                expenseContainer.innerHTML = '';
            }
            
            // 邨瑚ｲｻ繝・・繧ｿ繧貞ｾｩ蜈・            data.expenses.forEach((expense, index) => {
                addExpenseRecord();
                const currentId = nextExpenseId - 1;
                
                const vendorInput = document.querySelector(`[data-field="vendor"][data-id="${currentId}"]`);
                const accountSelect = document.querySelector(`[data-field="account"][data-id="${currentId}"]`);
                const itemInput = document.querySelector(`[data-field="item"][data-id="${currentId}"]`);
                const amountInput = document.querySelector(`[data-field="amount"][data-id="${currentId}"]`);
                
                if (vendorInput) vendorInput.value = expense.vendor || '';
                if (accountSelect) accountSelect.value = expense.account || '';
                if (itemInput) itemInput.value = expense.item || '';
                if (amountInput) amountInput.value = expense.amount || 0;
                
                console.log(`邨瑚ｲｻ繝ｬ繧ｳ繝ｼ繝・${index + 1} 繧貞ｾｩ蜈・＠縺ｾ縺励◆`);
            });
        }
        
        // 蛯呵・・蝣ｱ蜻贋ｺ矩・        if (data.remarks) {
            const remarksElement = document.getElementById('remarks');
            if (remarksElement) {
                remarksElement.value = data.remarks;
                
                
                // 譁・ｭ玲焚繧ｫ繧ｦ繝ｳ繝医ｒ譖ｴ譁ｰ
                const charCount = document.getElementById('charCount');
                if (charCount) {
                    charCount.textContent = data.remarks.length;
                }
            }
        }

        // 豺ｻ莉倥ヵ繧｡繧､繝ｫ蠕ｩ蜈・・隧ｳ邏ｰ繝ｭ繧ｰ霑ｽ蜉
        
        
        
        
        if (data.attachedFiles) {
            
        }
        
        
        
        
        

        if (data.attachedFiles && Array.isArray(data.attachedFiles) && data.attachedFiles.length > 0) {
            
            
            // 繝輔ぃ繧､繝ｫ蜈･蜉帶ｬ・ｒ繝ｪ繧ｻ繝・ヨ
            generateFileInputs();
            
            // 豺ｻ莉倥ヵ繧｡繧､繝ｫ繝・・繧ｿ繧偵げ繝ｭ繝ｼ繝舌Ν螟画焚縺ｫ蠕ｩ蜈・            data.attachedFiles.forEach((fileData, index) => {
                if (fileData && fileData.attachmentNumber && fileData.fileName) {
                    const attachmentIndex = fileData.attachmentNumber - 1;
                    if (attachmentIndex >= 0 && attachmentIndex < attachedFiles.length) {
                        // 繝輔ぃ繧､繝ｫ繝・・繧ｿ繧貞ｾｩ蜈・ｼ・ase64縺九ｉ謫ｬ莨ｼFile繧ｪ繝悶ず繧ｧ繧ｯ繝医ｒ菴懈・・・                        const restoredFile = createFileFromBase64(fileData);
                        
                        if (restoredFile) {
                            attachedFiles[attachmentIndex] = {
                                id: fileData.attachmentNumber,
                                file: restoredFile,
                                fileName: fileData.fileName,
                                fileSize: fileData.fileSize,
                                hasFile: true
                            };
                            
                            // UI縺ｫ陦ｨ遉ｺ
                            updateFileDisplayFromData(fileData.attachmentNumber, fileData);
                            console.log(`豺ｻ莉倥ヵ繧｡繧､繝ｫ ${fileData.attachmentNumber} 繧貞ｾｩ蜈・＠縺ｾ縺励◆:`, fileData.fileName);
                        }
                    }
                }
            });
        } else {
            
            
            
            
        }
        
        
        
        // 險育ｮ励ｒ譖ｴ譁ｰ
        updateAllCalculations();
    
        // 遒ｺ螳夂憾諷九ｒ蜿肴丐・郁ｿｽ蜉・・        if (data.status) {
            updateConfirmButtonState(data.status);
            
            // 遒ｺ螳壽ｸ医∩縺ｮ蝣ｴ蜷医・蜈ｨ蜈･蜉帙ヵ繧｣繝ｼ繝ｫ繝峨ｒ隱ｭ縺ｿ蜿悶ｊ蟆ら畑縺ｫ縺吶ｋ
            if (data.status === 'confirmed' && !window.isAdminUser) {
                setFormReadOnly(true);
            }
        }
        
        
        
    } catch (error) {
        console.error('繝輔か繝ｼ繝繝・・繧ｿ隱ｭ縺ｿ霎ｼ縺ｿ縺ｧ繧ｨ繝ｩ繝ｼ:', error);
        throw error;
    }
}

/**
 * 繝輔か繝ｼ繝蜈ｨ菴薙ｒ隱ｭ縺ｿ蜿悶ｊ蟆ら畑縺ｫ縺吶ｋ
 */
function setFormReadOnly(readOnly) {
    try {
        // 蜈ｨ縺ｦ縺ｮ蜈･蜉帙ヵ繧｣繝ｼ繝ｫ繝峨ｒ蜿門ｾ・        const inputs = document.querySelectorAll('input[type="number"], input[type="text"], input[type="date"], textarea, select');
        
        inputs.forEach(input => {
            if (readOnly) {
                input.setAttribute('readonly', 'true');
                input.style.backgroundColor = '#f3f4f6';
                input.style.cursor = 'not-allowed';
            } else {
                input.removeAttribute('readonly');
                input.style.backgroundColor = '';
                input.style.cursor = '';
            }
        });
        
        // 繝輔ぃ繧､繝ｫ蜈･蜉帙ｂ辟｡蜉ｹ蛹・        const fileInputs = document.querySelectorAll('input[type="file"]');
        fileInputs.forEach(input => {
            input.disabled = readOnly;
        });
        
        // 邨瑚ｲｻ霑ｽ蜉繝懊ち繝ｳ縺ｪ縺ｩ縺ｮ謫堺ｽ懊・繧ｿ繝ｳ繧ら┌蜉ｹ蛹・        const actionButtons = document.querySelectorAll('.add-button, .delete-button, .clear-file-button');
        actionButtons.forEach(button => {
            button.disabled = readOnly;
            if (readOnly) {
                button.style.opacity = '0.5';
                button.style.cursor = 'not-allowed';
            } else {
                button.style.opacity = '';
                button.style.cursor = '';
            }
        });
        
        console.log(`繝輔か繝ｼ繝繧・{readOnly ? '隱ｭ縺ｿ蜿悶ｊ蟆ら畑' : '邱ｨ髮・庄閭ｽ'}縺ｫ險ｭ螳壹＠縺ｾ縺励◆`);
        
    } catch (error) {
        console.error('繝輔か繝ｼ繝隱ｭ縺ｿ蜿悶ｊ蟆ら畑險ｭ螳壹〒繧ｨ繝ｩ繝ｼ:', error);
    }
}

/**
 * 蜊ｰ蛻ｷ蜃ｦ逅・ */
function handlePrint() {
    try {
        
        window.print();
    } catch (error) {
        console.error('蜊ｰ蛻ｷ蜃ｦ逅・〒繧ｨ繝ｩ繝ｼ:', error);
        showError('蜊ｰ蛻ｷ蜃ｦ逅・〒繧ｨ繝ｩ繝ｼ縺檎匱逕溘＠縺ｾ縺励◆');
    }
}

/**
 * 迴ｾ蝨ｨ縺ｮ譌･莉倥ｒ蜿門ｾ励＠縺ｦ繝輔か繝ｼ繝槭ャ繝・ * @returns {string} YYYY-MM-DD蠖｢蠑上・譌･莉・ */
function getCurrentDate() {
    try {
        return new Date().toISOString().split('T')[0];
    } catch (error) {
        console.error('譌･莉伜叙蠕励〒繧ｨ繝ｩ繝ｼ:', error);
        return '';
    }
}

/**
 * 謨ｰ蛟､蜈･蜉帙ヵ繧｣繝ｼ繝ｫ繝峨・繝輔か繝ｼ繧ｫ繧ｹ譎ゅ↓蜈ｨ驕ｸ謚・ */
function setupNumberInputFocus() {
    try {
        
        
        document.addEventListener('focus', function(e) {
            if (e.target.type === 'number') {
                try {
                    e.target.select();
                } catch (selectError) {
                    // select()縺悟､ｱ謨励＠縺ｦ繧ょ・逅・ｒ邯咏ｶ・                    console.warn('蜈･蜉帙ヵ繧｣繝ｼ繝ｫ繝峨・驕ｸ謚槭〒繧ｨ繝ｩ繝ｼ:', selectError);
                }
            }
        }, true);
        
        
        
    } catch (error) {
        console.error('謨ｰ蛟､蜈･蜉帙ヵ繧ｩ繝ｼ繧ｫ繧ｹ險ｭ螳壹〒繧ｨ繝ｩ繝ｼ:', error);
        console.warn('謨ｰ蛟､蜈･蜉帙・閾ｪ蜍暮∈謚樊ｩ溯・縺檎┌蜉ｹ縺ｫ縺ｪ繧翫∪縺・);
    }
}

/**
 * 繧ｨ繝ｩ繝ｼ繝｡繝・そ繝ｼ繧ｸ繧定｡ｨ遉ｺ
 * @param {string} message 繧ｨ繝ｩ繝ｼ繝｡繝・そ繝ｼ繧ｸ
 */
function showError(message) {
    try {
        console.error('繧ｨ繝ｩ繝ｼ繝｡繝・そ繝ｼ繧ｸ:', message);
        alert(message); // 蠕後〒繧医ｊ濶ｯ縺ФI・医Δ繝ｼ繝繝ｫ遲会ｼ峨↓鄂ｮ縺肴鋤縺井ｺ亥ｮ・    } catch (error) {
        console.error('繧ｨ繝ｩ繝ｼ繝｡繝・そ繝ｼ繧ｸ陦ｨ遉ｺ縺ｧ繧ｨ繝ｩ繝ｼ:', error);
    }
}

/**
 * 謌仙粥繝｡繝・そ繝ｼ繧ｸ繧定｡ｨ遉ｺ
 * @param {string} message 謌仙粥繝｡繝・そ繝ｼ繧ｸ
 */
function showSuccess(message) {
    try {
        
        alert(message); // 蠕後〒繧医ｊ濶ｯ縺ФI・医ヨ繝ｼ繧ｹ繝育ｭ会ｼ峨↓鄂ｮ縺肴鋤縺井ｺ亥ｮ・    } catch (error) {
        console.error('謌仙粥繝｡繝・そ繝ｼ繧ｸ陦ｨ遉ｺ縺ｧ繧ｨ繝ｩ繝ｼ:', error);
    }
}

// 髢｢謨ｰ繧偵げ繝ｭ繝ｼ繝舌Ν繧ｹ繧ｳ繝ｼ繝励↓譏守､ｺ逧・↓蜈ｬ髢・window.generatePaymentMethods = generatePaymentMethods;
window.generateDiscountSection = generateDiscountSection;
window.generateDenominationRows = generateDenominationRows;
window.setupEventListeners = setupEventListeners;
window.setupRemarksListeners = setupRemarksListeners;
window.loadDataIntoForm = loadDataIntoForm;
window.setFormReadOnly = setFormReadOnly;
window.showError = showError;
window.showSuccess = showSuccess;


